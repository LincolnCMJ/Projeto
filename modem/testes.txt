while (1) {
        if (xTaskGetTickCount() - last_send_time >= pdMS_TO_TICKS(1000)) {
            if (current_message_index < num_messages) {
                send_at_command(messages[current_message_index]);
                current_message_index++;
            } else {
                //current_message_index = 0; // Restart messages
                break;
            }
            last_send_time = xTaskGetTickCount();
        }
        receive();
        vTaskDelay(pdMS_TO_TICKS(1000));
    }

    uint8_t data_received[1024];
    int length = uart_read_bytes(UART, data_received, sizeof(data_received) - 1, 1000 / portTICK_PERIOD_MS);
    if (length > 0) {
        data_received[length] = 0; // Add a string terminator
        ESP_LOGI(TAG0, "Recebeu: %s", data_received);
        //ESP_LOGI(TAG0, "Recebeu: %s Tamanho: %d", data_received, length);
    }


    //"AT+CFUN=1\r\n",
        //"AT+CSTT=\"Claro Dados\",\"claro\",\"claro\"\r\n",
        //"AT+CIICR\r\n",
        //"AT+CREG?\r\n",
        //"AT+CMGS=\"5527995080724",
        //"Envia mensagem de teste!\r\n",
        //"AT+CIPSTART=\"TCP\",\"mqtt://mqtt.eclipseprojects.io\",\"1883\"\r\n",
        //"AT+CIPSTART=\"TCP\",\"mqtt.eclipseprojects.io\",\"1883\"\r\n",
        //"AT+CIPSEND\r\n",
        //"Envia mensagem de teste!\r\n",
        //"AT+CIPCLOSE\r\n",
        //"AT+CIPSHUT\r\n",

Envio de SMS via comandos AT:

const char *messages[] = {
    "AT\r\n",
    "AT+CMGF=1\r\n",
    "AT+CMGD=?\r\n",
    "AT+CSCA=\"+552194995300\"\r\n",
    "AT+CMGS=\"+5527995080724\"\r\n",
    "Envia mensagem de teste!\r\n",
    "\x1A"
};




"AT\r\n",
        "AT+CFUN=1\r\n",
        "AT+CPIN?\r\n",
        "AT+CSTT=\"claro.com.br\",\"claro\",\"claro\"\r\n",
        "AT+CIICR\r\n",
        "AT+CIFSR\r\n",
        //"AT+CIPSTART=\"TCP\",\"mqtt://mqtt.eclipseprojects.io\",\"1883\"\r\n",
        //"AT+CIPSTART=\"TCP\",\"exploreembedded.com\",\"80\"\r\n",
        //"AT+CIPSEND=63\r\n",
        //"GET exploreembedded.com/wiki/images/1/15/Hello.txt HTTP/1.0\r\n"
        //"\x1A"
        "AT+CIPSTART=\"TCP\",\"mqtt://mqtt.eclipseprojects.io\",\"1883\"\r\n"

"AT\r\n",
        "AT+CFUN=1\r\n",
        "AT+CPIN?\r\n",
        "AT+CSTT=\"claro.com.br\",\"claro\",\"claro\"\r\n",
        "AT+CIICR\r\n",
        "AT+CIFSR\r\n",
        //"AT+CIPSTART=\"TCP\",\"mqtt://mqtt.eclipseprojects.io\",\"1883\"\r\n",
        "AT+CIPSTART=\"TCP\",\"exploreembedded.com\",\"80\"\r\n",
        "AT+CIPSEND=63\r\n",
        "GET exploreembedded.com/wiki/images/1/15/Hello.txt HTTP/1.0",
        "\x1A",

const char *messages[] = {
        "AT\r\n",
        "AT+CFUN=1\r\n",
        "AT+CPIN?\r\n",
        "AT+CSTT=\"claro.com.br\",\"claro\",\"claro\"\r\n",
        "AT+CIICR\r\n",
        "AT+CIFSR\r\n",
        "AT+CIPSTART=\"TCP\",\"exploreembedded.com\",80\r\n",
        "AT+CIPSEND=63\r\n",
        "GET exploreembedded.com/wiki/images/1/15/Hello.txt HTTP/1.0\r\n",
        "\x1A"
        
    };

    const char *messages[] = {
        "AT\r\n",
        "AT+CMEE=2\r\n",
        "AT+CPIN?\r\n",
        "AT+CREG?\r\n",
        "AT+CGATT?\r\n",
        "AT+CSQ\r\n",
        "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r\n",
        "AT+SAPBR=3,1,\"APN\",\"claro.com.br\"\r\n",
        "AT+SAPBR=1,1\r\n",
        "AT+SAPBR=2,1\r\n",
        "AT+HTTPINIT\r\n",
        "AT+HTTPPARA=\"CID\",1\r\n",
        "AT+HTTPPARA=\"URL\",\"https://www.m2msupport.net/m2msupport/http_get_test.php\"\r\n",
        "AT+HTTPDATA=16,10000\r\n",
        "AT+HTTPACTION=1\r\n"
    };

    const char *messages[] = {
        "AT\r\n",
        "AT+CMEE=2\r\n",
        "AT+CPIN?\r\n",
        "AT+CREG?\r\n",
        "AT+CGATT?\r\n",
        "AT+CSQ\r\n",
        "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r\n",
        "AT+SAPBR=3,1,\"APN\",\"claro.com.br\"\r\n",
        "AT+SAPBR=1,1\r\n",
        "AT+SAPBR=2,1\r\n",
        "AT+HTTPINIT\r\n",
        "AT+HTTPPARA=\"CID\",1\r\n",
        "AT+HTTPPARA=\"URL\",\"https://www.m2msupport.net/m2msupport/http_get_test.php\"\r\n",
        "AT+HTTPDATA=16,10000\r\n",
        "AT+HTTPACTION=0\r\n",
        "AT+HTTPREAD\r\n",
    };